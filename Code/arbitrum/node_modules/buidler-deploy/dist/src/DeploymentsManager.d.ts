import { BuidlerRuntimeEnvironment, Deployment, DeploymentsExtension, DeploymentSubmission } from "@nomiclabs/buidler/types";
import { TransactionResponse } from "@ethersproject/providers";
export declare class DeploymentsManager {
    deploymentsExtension: DeploymentsExtension;
    private db;
    private env;
    private deploymentsPath;
    constructor(env: BuidlerRuntimeEnvironment);
    dealWithPendingTransactions(): Promise<void>;
    onPendingTx(tx: TransactionResponse, name?: string, deployment?: any): Promise<TransactionResponse>;
    getNamedAccounts(): Promise<{
        [name: string]: string;
    }>;
    loadDeployments(): Promise<{
        [name: string]: Deployment;
    }>;
    deletePreviousDeployments(): Promise<void>;
    getSolcInputPath(): Promise<string>;
    saveDeployment(name: string, deployment: DeploymentSubmission): Promise<boolean>;
    runDeploy(tags?: string | string[], options?: {
        deletePreviousDeployments: boolean;
        log: boolean;
        resetMemory: boolean;
        writeDeploymentsToFiles: boolean;
        savePendingTx: boolean;
        export?: string;
        exportAll?: string;
        gasPrice?: string;
    }): Promise<{
        [name: string]: Deployment;
    }>;
    private saveSnapshot;
    private revertSnapshot;
    private getDeploymentsSubPath;
}
//# sourceMappingURL=DeploymentsManager.d.ts.map